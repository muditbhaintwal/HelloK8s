apiVersion: v1
kind: Service # type of the resource
metadata:
  name: hello-k8s-svc # name of the service
spec:
  selector:
    app: hello-k8s # label of the pod
  ports:
  - name: http # name of the port
    port: 80 # Service exposes to the "external" world
    targetPort: 8080 #the "internal" port that the Service will use to communicate with the pods.
  type: LoadBalancer


  # In Kubernetes, a Service is an abstract resource that provides a network identity and load balancing for accessing a group of pods. Services allow you to access a pod or a group of pods without worrying about the pod's IP address or port.
  #
  # A user sends a request to http://my-service:80

  # The Service receives the request and forwards it to port 8080 on the selected pods
  # The pods receive the request on port 8080 and process it accordingly
  #
  # By using a different port number for the targetPort field, you can decouple the external port that users access the Service on from the internal port that the Service uses to communicate with the pods. This can be useful for a variety of reasons, such as:
  #
  # Using a standard port number (like port 80) for the external port, while using a non-standard port number (like port 8080) for the internal port
  # Allowing multiple Services to share the same external port number, while using different internal port numbers to communicate with different pods
  #
  #